{"version":3,"sources":["components/Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","App","useState","query","setQuery","movies","setMovies","SearchMovies","e","a","preventDefault","url","process","fetch","res","json","data","results","console","log","error","movieList","filter","map","id","onSubmit","htmlFor","onChange","target","value","type","name","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA0BeA,MAxBf,YAA4B,IAAVC,EAAS,EAATA,MAChB,OAEI,sBAAKC,UAAU,OAAf,UACE,qBACEA,UAAU,cACVC,IAAG,0DAAqDF,EAAMG,aAC9DC,IAAKJ,EAAMK,MAAQ,WAErB,sBAAKJ,UAAU,gBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BACE,mDAAsBL,EAAMM,kBAE9B,4BACE,6CAAgBN,EAAMO,kBAExB,mBAAGN,UAAU,aAAb,SAA2BD,EAAMQ,kBCoC5BC,MApDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBD,EAAEE,iBAEIC,EAHa,4DAG8CC,mCAH9C,iCAGoGT,EAHpG,iDAMCU,MAAMF,GANP,cAMXG,EANW,gBAOEA,EAAIC,OAPN,OAOXC,EAPW,OAQjBV,EAAUU,EAAKC,SACfC,QAAQC,IAAIH,GATK,kDAWjBE,QAAQE,MAAR,MAXiB,QAcnBhB,EAAS,IAdU,0DAAH,sDAiBZiB,EAAYhB,EAAOiB,QAAO,SAAA9B,GAAK,OAAGA,EAAMG,eAAa4B,KAAI,SAAA/B,GAAK,OAAG,cAAC,EAAD,CAAwBA,MAAOA,GAAjBA,EAAMgC,OAE3F,OACE,sBAAK/B,UAAU,YAAf,UACA,oBAAIA,UAAU,QAAd,gCAEE,uBAAMA,UAAU,OAAOgC,SAAU,SAACjB,GAAD,OAAOD,EAAaC,IAArD,UACE,wBAAOkB,QAAQ,QAAQjC,UAAU,QAAjC,UACG,IADH,gBAIA,uBACEkC,SAAU,SAACnB,GAAD,OAAOJ,EAASI,EAAEoB,OAAOC,QACnCA,MAAO1B,EACPV,UAAU,QACVqC,KAAK,OACLC,KAAK,QACLC,YAAY,uBAGd,wBAAQF,KAAK,SAASrC,UAAU,SAAhC,uBAIF,qBAAKA,UAAU,YAAf,SACC4B,QCrCQY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8367b092.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Movies({ movie }) {\r\n  return (\r\n    \r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card--image\"\r\n          src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\r\n          alt={movie.title + \"poster\"}\r\n        />\r\n        <div className=\"card--content\">\r\n          <h3 className=\"card--title\">{movie.title}</h3>\r\n          <p>\r\n            <small>RELEASE DATE: {movie.release_date}</small>\r\n          </p>\r\n          <p>\r\n            <small>RATING: {movie.vote_average}</small>\r\n          </p>\r\n          <p className=\"card--desc\">{movie.overview}</p>\r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import React, { useState } from \"react\";\nimport Movies from \"./components/Movies\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const SearchMovies = async (e) => {\n    e.preventDefault();\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setQuery('')\n  };\n\n  const movieList = movies.filter(movie=> movie.poster_path).map(movie=> <Movies key= {movie.id} movie={movie}/>)\n\n  return (\n    <div className=\"container\">\n    <h1 className=\"title\">React Movie Search</h1>\n  \n      <form className=\"form\" onSubmit={(e) => SearchMovies(e)}>\n        <label htmlFor=\"query\" className=\"label\">\n          {\" \"}\n          Movie Name\n        </label>\n        <input\n          onChange={(e) => setQuery(e.target.value)}\n          value={query}\n          className=\"input\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n        ></input>\n\n        <button type=\"submit\" className=\"button\">\n          Search\n        </button>\n      </form>\n      <div className=\"card-list\">\n      {movieList}\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}